// Generated by data binding compiler. Do not edit!
package com.nojom.client.databinding;

import android.textview.CustomTextView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.nojom.client.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemOrdersBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout imageContainer;

  @NonNull
  public final LinearLayout loutHeader;

  @NonNull
  public final ProgressBar progress1;

  @NonNull
  public final ProgressBar progress2;

  @NonNull
  public final ProgressBar progress3;

  @NonNull
  public final ProgressBar progress4;

  @NonNull
  public final CustomTextView tvTitle;

  @NonNull
  public final CustomTextView txtCampId;

  @NonNull
  public final CustomTextView txtDate;

  @NonNull
  public final CustomTextView txtPrice;

  @NonNull
  public final CustomTextView txtStatus;

  protected ItemOrdersBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout imageContainer, LinearLayout loutHeader, ProgressBar progress1,
      ProgressBar progress2, ProgressBar progress3, ProgressBar progress4, CustomTextView tvTitle,
      CustomTextView txtCampId, CustomTextView txtDate, CustomTextView txtPrice,
      CustomTextView txtStatus) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imageContainer = imageContainer;
    this.loutHeader = loutHeader;
    this.progress1 = progress1;
    this.progress2 = progress2;
    this.progress3 = progress3;
    this.progress4 = progress4;
    this.tvTitle = tvTitle;
    this.txtCampId = txtCampId;
    this.txtDate = txtDate;
    this.txtPrice = txtPrice;
    this.txtStatus = txtStatus;
  }

  @NonNull
  public static ItemOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_orders, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemOrdersBinding>inflateInternal(inflater, R.layout.item_orders, root, attachToRoot, component);
  }

  @NonNull
  public static ItemOrdersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_orders, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemOrdersBinding>inflateInternal(inflater, R.layout.item_orders, null, false, component);
  }

  public static ItemOrdersBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemOrdersBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemOrdersBinding)bind(component, view, R.layout.item_orders);
  }
}
