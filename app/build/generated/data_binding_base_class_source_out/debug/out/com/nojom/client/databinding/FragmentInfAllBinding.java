// Generated by data binding compiler. Do not edit!
package com.nojom.client.databinding;

import android.textview.CustomTextView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.nojom.client.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentInfAllBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout loutBest;

  @NonNull
  public final LinearLayout loutGig;

  @NonNull
  public final LinearLayout loutLinkedin;

  @NonNull
  public final NestedScrollView nestedScroll;

  @NonNull
  public final RelativeLayout relSendOffer;

  @NonNull
  public final RelativeLayout rlAgencyView;

  @NonNull
  public final RelativeLayout rlBestView;

  @NonNull
  public final RecyclerView rvLinkedin;

  @NonNull
  public final RecyclerView rvServices;

  @NonNull
  public final CustomTextView tvAgencyContact;

  @NonNull
  public final CustomTextView tvAgencyName;

  @NonNull
  public final CustomTextView tvAgencyWebsite;

  @NonNull
  public final CustomTextView tvGigTitle;

  @NonNull
  public final RelativeLayout tvLinkedinView;

  @NonNull
  public final RelativeLayout tvLinkedinViewAll;

  @NonNull
  public final CustomTextView tvPhReview;

  @NonNull
  public final CustomTextView tvPhService;

  @NonNull
  public final CustomTextView txtReviewCount;

  @NonNull
  public final CustomTextView txtReviews;

  @NonNull
  public final CustomTextView viewAllLinkedin;

  @NonNull
  public final CustomTextView viewBestAll;

  @NonNull
  public final CustomTextView viewGigAll;

  @NonNull
  public final CustomTextView viewLinkdAll;

  protected FragmentInfAllBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout loutBest, LinearLayout loutGig, LinearLayout loutLinkedin,
      NestedScrollView nestedScroll, RelativeLayout relSendOffer, RelativeLayout rlAgencyView,
      RelativeLayout rlBestView, RecyclerView rvLinkedin, RecyclerView rvServices,
      CustomTextView tvAgencyContact, CustomTextView tvAgencyName, CustomTextView tvAgencyWebsite,
      CustomTextView tvGigTitle, RelativeLayout tvLinkedinView, RelativeLayout tvLinkedinViewAll,
      CustomTextView tvPhReview, CustomTextView tvPhService, CustomTextView txtReviewCount,
      CustomTextView txtReviews, CustomTextView viewAllLinkedin, CustomTextView viewBestAll,
      CustomTextView viewGigAll, CustomTextView viewLinkdAll) {
    super(_bindingComponent, _root, _localFieldCount);
    this.loutBest = loutBest;
    this.loutGig = loutGig;
    this.loutLinkedin = loutLinkedin;
    this.nestedScroll = nestedScroll;
    this.relSendOffer = relSendOffer;
    this.rlAgencyView = rlAgencyView;
    this.rlBestView = rlBestView;
    this.rvLinkedin = rvLinkedin;
    this.rvServices = rvServices;
    this.tvAgencyContact = tvAgencyContact;
    this.tvAgencyName = tvAgencyName;
    this.tvAgencyWebsite = tvAgencyWebsite;
    this.tvGigTitle = tvGigTitle;
    this.tvLinkedinView = tvLinkedinView;
    this.tvLinkedinViewAll = tvLinkedinViewAll;
    this.tvPhReview = tvPhReview;
    this.tvPhService = tvPhService;
    this.txtReviewCount = txtReviewCount;
    this.txtReviews = txtReviews;
    this.viewAllLinkedin = viewAllLinkedin;
    this.viewBestAll = viewBestAll;
    this.viewGigAll = viewGigAll;
    this.viewLinkdAll = viewLinkdAll;
  }

  @NonNull
  public static FragmentInfAllBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_inf_all, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInfAllBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentInfAllBinding>inflateInternal(inflater, R.layout.fragment_inf_all, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentInfAllBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_inf_all, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInfAllBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentInfAllBinding>inflateInternal(inflater, R.layout.fragment_inf_all, null, false, component);
  }

  public static FragmentInfAllBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentInfAllBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentInfAllBinding)bind(component, view, R.layout.fragment_inf_all);
  }
}
