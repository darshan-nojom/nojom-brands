// Generated by data binding compiler. Do not edit!
package com.nojom.client.databinding;

import android.textview.CustomTextView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.nojom.client.R;
import fr.castorflex.android.circularprogressbar.CircularProgressBar;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemListFilesBinding extends ViewDataBinding {
  @NonNull
  public final ImageView imgFolder;

  @NonNull
  public final ImageView imgView;

  @NonNull
  public final CircularProgressBar progressBarSave;

  @NonNull
  public final RelativeLayout relBg;

  @NonNull
  public final CustomTextView tvDate;

  @NonNull
  public final CustomTextView tvFileName;

  @NonNull
  public final CustomTextView tvOwner;

  protected ItemListFilesBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView imgFolder, ImageView imgView, CircularProgressBar progressBarSave,
      RelativeLayout relBg, CustomTextView tvDate, CustomTextView tvFileName,
      CustomTextView tvOwner) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgFolder = imgFolder;
    this.imgView = imgView;
    this.progressBarSave = progressBarSave;
    this.relBg = relBg;
    this.tvDate = tvDate;
    this.tvFileName = tvFileName;
    this.tvOwner = tvOwner;
  }

  @NonNull
  public static ItemListFilesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_list_files, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemListFilesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemListFilesBinding>inflateInternal(inflater, R.layout.item_list_files, root, attachToRoot, component);
  }

  @NonNull
  public static ItemListFilesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_list_files, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemListFilesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemListFilesBinding>inflateInternal(inflater, R.layout.item_list_files, null, false, component);
  }

  public static ItemListFilesBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemListFilesBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemListFilesBinding)bind(component, view, R.layout.item_list_files);
  }
}
