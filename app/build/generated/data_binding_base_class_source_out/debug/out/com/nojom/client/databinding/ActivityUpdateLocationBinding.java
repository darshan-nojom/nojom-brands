// Generated by data binding compiler. Do not edit!
package com.nojom.client.databinding;

import android.edittext.CustomEditText;
import android.textview.CustomTextView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.nojom.client.R;
import fr.castorflex.android.circularprogressbar.CircularProgressBar;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityUpdateLocationBinding extends ViewDataBinding {
  @NonNull
  public final CustomTextView btnLocation;

  @NonNull
  public final CustomEditText etCity;

  @NonNull
  public final CustomEditText etCountry;

  @NonNull
  public final CustomEditText etState;

  @NonNull
  public final ImageView imgCity;

  @NonNull
  public final ImageView imgCountry;

  @NonNull
  public final ImageView imgState;

  @NonNull
  public final CircularProgressBar progressBarCity;

  @NonNull
  public final CircularProgressBar progressBarCountry;

  @NonNull
  public final CircularProgressBar progressBarLocation;

  @NonNull
  public final CircularProgressBar progressBarState;

  @NonNull
  public final RelativeLayout relCity;

  @NonNull
  public final ToolbarSaveBinding toolbar;

  protected ActivityUpdateLocationBinding(Object _bindingComponent, View _root,
      int _localFieldCount, CustomTextView btnLocation, CustomEditText etCity,
      CustomEditText etCountry, CustomEditText etState, ImageView imgCity, ImageView imgCountry,
      ImageView imgState, CircularProgressBar progressBarCity,
      CircularProgressBar progressBarCountry, CircularProgressBar progressBarLocation,
      CircularProgressBar progressBarState, RelativeLayout relCity, ToolbarSaveBinding toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnLocation = btnLocation;
    this.etCity = etCity;
    this.etCountry = etCountry;
    this.etState = etState;
    this.imgCity = imgCity;
    this.imgCountry = imgCountry;
    this.imgState = imgState;
    this.progressBarCity = progressBarCity;
    this.progressBarCountry = progressBarCountry;
    this.progressBarLocation = progressBarLocation;
    this.progressBarState = progressBarState;
    this.relCity = relCity;
    this.toolbar = toolbar;
  }

  @NonNull
  public static ActivityUpdateLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_update_location, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityUpdateLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityUpdateLocationBinding>inflateInternal(inflater, R.layout.activity_update_location, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityUpdateLocationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_update_location, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityUpdateLocationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityUpdateLocationBinding>inflateInternal(inflater, R.layout.activity_update_location, null, false, component);
  }

  public static ActivityUpdateLocationBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityUpdateLocationBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityUpdateLocationBinding)bind(component, view, R.layout.activity_update_location);
  }
}
