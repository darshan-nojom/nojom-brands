// Generated by data binding compiler. Do not edit!
package com.nojom.client.databinding;

import android.textview.CustomTextView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.makeramen.roundedimageview.RoundedImageView;
import com.nojom.client.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemPartnersBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView imgArrow;

  @NonNull
  public final RoundedImageView imgProfile;

  @NonNull
  public final LinearLayout loutHeader;

  @NonNull
  public final RelativeLayout relCode;

  @NonNull
  public final CustomTextView txtCode;

  @NonNull
  public final CustomTextView txtFollowerCount;

  @NonNull
  public final CustomTextView txtTitle;

  protected ItemPartnersBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatImageView imgArrow, RoundedImageView imgProfile, LinearLayout loutHeader,
      RelativeLayout relCode, CustomTextView txtCode, CustomTextView txtFollowerCount,
      CustomTextView txtTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgArrow = imgArrow;
    this.imgProfile = imgProfile;
    this.loutHeader = loutHeader;
    this.relCode = relCode;
    this.txtCode = txtCode;
    this.txtFollowerCount = txtFollowerCount;
    this.txtTitle = txtTitle;
  }

  @NonNull
  public static ItemPartnersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_partners, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPartnersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPartnersBinding>inflateInternal(inflater, R.layout.item_partners, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPartnersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_partners, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPartnersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPartnersBinding>inflateInternal(inflater, R.layout.item_partners, null, false, component);
  }

  public static ItemPartnersBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPartnersBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPartnersBinding)bind(component, view, R.layout.item_partners);
  }
}
