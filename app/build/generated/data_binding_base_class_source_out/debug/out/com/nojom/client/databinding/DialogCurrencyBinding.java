// Generated by data binding compiler. Do not edit!
package com.nojom.client.databinding;

import android.textview.CustomTextView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.nojom.client.R;
import fr.castorflex.android.circularprogressbar.CircularProgressBar;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DialogCurrencyBinding extends ViewDataBinding {
  @NonNull
  public final CircularProgressBar progressBar;

  @NonNull
  public final RelativeLayout relApply;

  @NonNull
  public final CustomTextView tvApply;

  @NonNull
  public final CustomTextView tvCancel;

  @NonNull
  public final CustomTextView txtSar;

  @NonNull
  public final CustomTextView txtUsd;

  protected DialogCurrencyBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CircularProgressBar progressBar, RelativeLayout relApply, CustomTextView tvApply,
      CustomTextView tvCancel, CustomTextView txtSar, CustomTextView txtUsd) {
    super(_bindingComponent, _root, _localFieldCount);
    this.progressBar = progressBar;
    this.relApply = relApply;
    this.tvApply = tvApply;
    this.tvCancel = tvCancel;
    this.txtSar = txtSar;
    this.txtUsd = txtUsd;
  }

  @NonNull
  public static DialogCurrencyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_currency, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogCurrencyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogCurrencyBinding>inflateInternal(inflater, R.layout.dialog_currency, root, attachToRoot, component);
  }

  @NonNull
  public static DialogCurrencyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_currency, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogCurrencyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogCurrencyBinding>inflateInternal(inflater, R.layout.dialog_currency, null, false, component);
  }

  public static DialogCurrencyBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogCurrencyBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogCurrencyBinding)bind(component, view, R.layout.dialog_currency);
  }
}
